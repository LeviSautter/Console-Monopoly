'''
Author: Me
Monopoly
'''


import random
import sys
import webbrowser
import os
from time import *
from CM_Classes import *
from graphics import *

def main():
    print('+--------------------+')
    print('|     Welcome to     |')
    print('| Console Monopoly!  |')
    print('+--------------------+\n')
    print('How many players will be playing? (2-4)')
    board = Board()
    player_count = 0
    players = []
#    gui = graphics(1000,1000,"Console Monopoly")
#    screen = Screen()
#    screen.title(gui)

    while player_count not in range(2, 5):
        player_count = input().strip()
        if not (player_count.isdecimal() and int(player_count) in range(2, 5)):
            print('Try again, 2-4 players only.')
            continue
        player_count = int(player_count)

    for i in range(player_count):
        name = input(f"\nPlayer {i+1}, what is your name?\n")
        players.append(Player(name))
    play_order = goes_first(player_count,players)
    #title()
    help_menu(0)
    game(play_order,board)


def game(p_o,board):
    p = 0 #This variable represents the index of the current player.  p = 0 means player 1, etc.
    command = 'z'

    while board.game_over is False: # Game loop
        print("It's your turn",p_o[p].name)
        while command != 'end' or p_o[p].jail is False: # Turn loop
            if p_o[p].doubles == 3:
                pass #SEND TO JAIL HAERE
            print("Please enter a command...")
            command = input().lower()
            print('\n')

            if command == 'rules':
                rules()

            elif command == 'help':
                help_menu(1)

            elif command == 'end' and p_o[p].rolls == 0:
                print()
                print('Turn over')
                print('-'*50)
                print('\n\n')
                break

            elif command == 'buildings':
                building(p_o,p,board)

            elif command == 'end' and p_o[p].rolls != 0:
                print('You still have a roll available')

            elif command == 'balance':
                print()
                print('You have $'+str(p_o[p].money))

            elif command == 'jailbreak':
                pass #GET OUT OF JAIL FREE CARD

            elif command == 'properties':
                pass #HELPER FUNCTION TO PRINT PROPERTIES
            
            elif command == '':
                if p_o[p].rolls == 0:
                    print("Sorry, you already rolled this turn. Try another command, or type 'end' to end the turn.")
                    continue
                else:
                    p_o[p].rolls -= 1
                    x=p_o[p].roll_dice(True)
                    p_o[p].pos += x
                    if p_o[p].pos > 39:
                        p_o[p].pos -=40
                        p_o[p].go()
                        print('Passed GO! Collect $200')
                    y=land(p_o,p,board)

            else:
                print()
                print("Unknown command. Please try again, or type 'help'.")

        command = ''
        p_o[p].rolls   = 1
        p_o[p].doubles = 0
        if p == len(p_o)-1:
            p = 0
        else:
            p += 1


#----------------------------------------------------------------------
#-------------------------- HELPER FUNCTIONS --------------------------
#----------------------------------------------------------------------


def land(p_o,p,board):
    '''
    Function for when the player rolls and lands on a tile.
    has lots of operations depending on what the player lands on and what they want to do.

    Base code for accessing the board at this location...
    board_pos = board.board[int(p_o[p].pos)]

    add [0] for type of tile
    add [1] for name of tile
    add [2] for cost of tile
    add [3] for rent of tile
        [0] =     base rent
        [1] = 1  house rent
        [2] = 2  house rent
        [3] = 3  house rent
        [4] = 4  house rent
        [5] =    hotel rent
        [6] =    house cost
        [7] = mortgage cost
    add [4] for color
    add [5] for tile card
    add [6] for building count
    add [7] for ownership info

    EXAMPLE.... board_pos [2] == cost of the property
    EXAMPLE.... board_pos [3] [4] == 4 houses rent
    '''
    board_pos = board.board[int(p_o[p].pos)]
    print('You landed on',board_pos[1])
    if board_pos[0] in {0,4,5}:                          # Condition that board type is property, RR, or utility

    
        if board_pos[7] == 5:                            # Condition if the tile is un-owned
            cg,max = p_o[p].add_prop(board_pos[4],False)
            print(board_pos[5])
            print()
            print(f'This property is unowned and costs ${board_pos[2]}, what would you like to do?')
            if board_pos[0] == 0:
                print(f'You currently own {cg}/{max} cards of this color-group.')
            elif board_pos[0] in {4,5}:
                print(f'You currently own {cg}/{max} cards of this set.')
            command = 'z'
            while command != 'pass':
                print('Please enter a property command...')
                command = input().lower()
                print('\n\n')
                if command == 'buy':
                    if p_o[p].money >= board_pos[2]:
                        print(f'Are you sure you want to buy this property for ${board_pos[2]}?')
                        print(f'You have ${p_o[p].money} now and will have ${p_o[p].money-board_pos[2]} after you acquire the deed.')
                        print("Type 'yes' or 'no'.")
                        command = 'z'
                        while command not in {'yes','no'}:
                            command = input().lower()
                            print('\n\n')
                            if command == 'yes':
                                print('Property purchased!')
                                for i in range(board_pos[2]):
                                    sys.stdout.write("\r" + 'Your Balance:'+' $'+str(p_o[p].money-i-1))
                                    sys.stdout.flush()
                                    sleep(.002)
                                p_o[p].props.append(board_pos)     # adding property info to player
                                p_o[p].money-=board_pos[2]         # adjusting players money
                                p_o[p].add_prop(board_pos[4],True) # adding a count to the players color-group/set
                                board_pos[7] = p                   # setting the ownership to current player
                                print()
                                sleep(2)
                                return
                            elif command == 'no':
                                print('Property not purchased')
                            else:
                                print('Try again')
                    else:
                        print('Insufficient funds!')
                        print(f'You need an additional ${abs(board_pos[2]-p_o[p].money)} to purchase this property.')
                
                elif command == 'pass':
                    print('Property not purchased')
                    break

                elif command == 'card':
                    print(board_pos[5])


                elif command == 'balance':
                    print('You have $'+str(p_o[p].money))

                elif command == 'rules':
                    rules()

                elif command == 'help':
                    help_menu(1)
                    
                else:
                    print("Unknown command. Please try again, or type 'help'.")


        elif board_pos[7] in {0,1,2,3}: # player landing on another players property
            print(f"Uh-oh, you landed on {p_o[board_pos[7]].name}'s property.")
            sleep(2)
            if board_pos[0] in {0,4}:
                if board_pos[0] == 0 and board_pos[6] in {0,2,3,4}:
                    string = 'houses.'
                if board_pos[0] == 0 and board_pos[6] == 1:
                    string = 'house.'
                if board_pos[0] == 0 and board_pos[6] != 5:
                    print(f"{p_o[board_pos[board_pos[7]]].name}'s {board_pos[1]} has {board_pos[6]}",string)
                if board_pos[0] == 0 and board_pos[6] == 5:
                    print(f"{p_o[board_pos[board_pos[7]]].name}'s {board_pos[1]} has a hotel.")
                sleep(2)
                print(f"Your rent is ${board_pos[3][board_pos[6]]}")
                sleep(2)
                print('\n\n')
                if p_o[p].money >= board_pos[3][board_pos[6]]:   # player paying rent
                    for i in range(board_pos[3][board_pos[6]]):
                        sys.stdout.write("\r" + 'Your Balance:'+' $'+str(p_o[p].money-i-1)+'    '+
                                          p_o[board_pos[7]].name+"'s Balance: $"+(str(p_o[board_pos[7]].money+i+1)))
                        sys.stdout.flush()
                        sleep(.002)
                    p_o[p].money-=board_pos[3][board_pos[6]]
                    p_o[board_pos[7]].money+=board_pos[3][board_pos[6]]
                    print()
                else:             # If the player cannot afford rent
                    print('Insufficient funds!')
                    sleep(2)
                    print('You must sell some buildings or mortgage a few properties! ')
                    print(f'You need to make up ${abs(board_pos[3][board_pos[6]]-p_o[p].money)} to break even and stay in the game.')
                    print('If you are un-able to find the funds, you will go bankrupt!')


#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def building(p_o,p,board):
    board_pos = board.board[int(p_o[p].pos)]     #Defined in land()
    print()
    if len(p_o[p].props) == 0:
        print('You do not have any properties to buy buildings for.')
        print('Go buy some properties!')
    else:
        print('You want to buy or sell some buildings?')
        print('Here is a list of every property you own.')
        sleep(2)
        print()
        print(f"---------- {p_o[p].name}'s Properties ----------")
        for i in range(len(p_o[p].props)):
            print(p_o[p].props[i][1])
        print(f"-----------{'-'*len(p_o[p].name)}------------------------")
        print('Please type the name of the property you wish to purchase or sell buildings for. ')
        print('\n')

        while True:
            print('Please enter a building command...')
            y = 0
            command = input().lower()
            
            if command == 'rules':
                rules()

            if command == 'help':
                help_menu(1)   
                
            else:

                for property in p_o[p].props:
                    if property[1].lower() == command.lower():
                        cur_prop = property[1]
                        y = 1   # Checker to verify that a name has been found and matches
                        break
                    else:
                        print("Unknown property. Please try again, or type 'help'.")
                        continue

                if y == 1:

                    for i in range(len(board.board)):
                        if board.board[i][1].lower() == cur_prop.lower():
                            changed = board.board[i]
                            buy_check(p_o,p,changed,board)
                            buy_check2(p_o,p,changed,board)
                            break

                    if changed[0] == 0 and changed[6] == 1:
                        print(f'You own 1 house for {changed[1]}')
                    if changed[0] == 0 and changed[6] not in {1,5}:
                        print(f'You own {changed[6]} houses for {changed[1]}')
                    if changed[0] == 0 and changed[6] == 5:
                        print(f'You own the hotel for {changed[1]}')
                    sleep(2)
                    print(f"Buildings for {changed[1]} cost ${changed[3][6]} each, or ${changed[3][6]/2} to sell.")
                    print('Did you want to buy or sell?')

                    while True:
                        command = input().lower()

                        if command == 'buy':
                            if changed[6] < p_o[p].buy_brown and p_o[p].brown_cg == 2:
                                x = True
                            elif changed[6] < p_o[p].buy_light_b and p_o[p].light_b_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_pink and p_o[p].pink_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_orange and p_o[p].orange_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_red and p_o[p].red_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_yellow and p_o[p].yellow_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_green and p_o[p].green_cg == 3:
                                x = True
                            elif changed[6] < p_o[p].buy_blue and p_o[p].blue_cg == 2:
                                x = True
                            else:
                                x = False
                            if x == True:
                                changed[6]+=1
                                print('PURCHASED')
                            else:
                                print('fail')
                                return

                        elif command == 'sell':
                            if changed[6] == 0:
                                print('You have no buildings to sell on this property!')
                                return
                        
                        elif command == 'back':
                            print('\n\n')
                            return

                        else:
                            print("Try again, or type 'back' to exit")
                    





#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def goes_first(player_count,players):
    '''Function soley for determining the player order of the game'''
    vals = []
    max = 0
    player_check = 0
    play_order = []

    for i in range(len(players)): #loop for getting the players rolls
        if i == 0:
            print('\nLets see who goes first.',players[0].name+', please roll the die.')
        elif i == len(players)-1 and len(players) != 2:
            print('Finally,',players[i].name+' please roll the die.')
        else:
            print('Next up is',players[i].name,'to roll.')
        roll = input("Press 'Enter' to roll the die.\n")

        while roll != '':
            roll = input("Press 'Enter' to roll the die.\n")

        x=players[i].roll_dice(False)
        vals.append((x,players[i]))
        print()
        if x < 5:
            print('Uh oh',players[i].name+', you only got',x,'\n')
        if x > 4 and x <9:
            print('Not bad',players[i].name+', you scored',x,'\n')
        if x > 8 and x != 12:
            print('Well done',players[i].name+', you got',str(x)+'\n')
        if x == 12:
            print('Wow',players[i].name,'you got a perfect 12!\n')
    vals.sort(key=lambda y: y[0],reverse=True)

    for i in range(len(vals)): #loop for deciding player order
        if i == 0:
            print(vals[i][1].name+', you scored',vals[i][0],'and will begin the game.')
        else:
            try:
                if i != 0 and vals[i+1][0] == vals[i][0]:
                    print('Next will be',vals[i][1].name+', who won the tie-breaker.')
                    play_order.append(vals[i][1])
                    sleep(2)
                    continue
            except:
                if i == len(vals)-1 and len(vals) != 2:
                    print('Finally, it will be '+vals[i][1].name+"'s turn.")
                else:
                    print('Next will be '+vals[i][1].name+"'s turn.")
#        sleep(2)
        play_order.append(vals[i][1])
    print('\n\n\n\n\nLoading game...\n\n')
    return play_order


#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def buy_check(p_o,p,changed,board):  # function for seeing if buildings are available and unlocks them
    for tile in board.board:
        if tile[4] == changed[4]:
            if tile[4] == 'Brown':
                if p_o[p].brown_cg == 2:
                    p_o[p].buy_brown = 1
            if tile[4] == 'Light Blue':
                if p_o[p].light_b_cg == 3:
                    p_o[p].buy_light_b = 1
            if tile[4] == 'Pink':
                if p_o[p].pink_cg == 3:
                    p_o[p].buy_pink = 1   
            if tile[4] == 'Orange':
                if p_o[p].orange_cg == 3:
                    p_o[p].buy_orange = 1 
            if tile[4] == 'Red':
                if p_o[p].red_cg == 3:
                    p_o[p].buy_red = 1
            if tile[4] == 'Yellow':
                if p_o[p].yellow_cg == 3:
                    p_o[p].buy_yellow = 1
            if tile[4] == 'Green':
                if p_o[p].green_cg == 3:
                    p_o[p].buy_green = 1
            if tile[4] == 'Blue':
                if p_o[p].blue_cg == 2:
                    p_o[p].buy_blue = 1

def buy_check2(p_o,p,changed,board):
    checker = 0
    for tile in board.board:
        if tile[4] == changed[4]:
            if tile[6] != 5:
                if tile[6] == changed[6]:
                    if tile[4] == 'Brown' and p_o[p].buy_brown == tile[6]:
                        checker+=1
                        if checker == 2:
                            p_o[p].buy_brown+=1
                    if tile[4] == 'Light Blue' and p_o[p].buy_light_b == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_light_b+=1
                    if tile[4] == 'Pink' and p_o[p].buy_pink == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_light_b+=1
                    if tile[4] == 'Orange' and p_o[p].buy_orange == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_orange+=1
                    if tile[4] == 'Red' and p_o[p].buy_red == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_red+=1
                    if tile[4] == 'Yellow' and p_o[p].buy_yellow == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_yellow+=1
                    if tile[4] == 'Green' and p_o[p].buy_green == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_green+=1
                    if tile[4] == 'Blue' and p_o[p].buy_blue == tile[6]:
                        checker+=1
                        if checker == 3:
                            p_o[p].buy_blue+=1

            
            

#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def help_menu(x):
    '''Displays all the rules and information about the game when called.'''
    if x != 0:
        print('\n\n------- HELP MENU -------\n')
    print("To see more information, please type 'rules'")
    print("It will prompt you to open a website with lots of useful game information.\n")
    print("To roll the die, press 'Enter'")
    print("To end your turn, type 'end'")
    print("To view owned properties, type 'properties'")
    print("To use a get out of jail free card, type 'jailbreak'")
    print("To see your balance, type 'balance'")
    print("To buy property buildings, type 'buildings'")
    if x == 0:
        print('Each player will start with $1500.')
    print('Pass GO and recieve $200.')
    print('Win by achieving $10,000 in cash, or making all other players go bankrupt.\n\n')
    print('---- PROPERTY MENU -----\n')
    print('When you land on a property, a few things will happen.')
    print('If the property is unowned, you will be propted with the')
    print('card of that tile. From there you can chose to buy it or not.')
    print("To buy a property, type 'buy'")
    print("To not buy a property, type 'pass'")
    print("To re-view the property card, type 'card'")
    print('If the property is owned by another player. You will be required ')
    print('to pay the full rent to the owner.')
    print('\n')
    print('---- BUILDING MENU -----\n')
    print("To buy a building, type the name of the desired property.")
    print('\n')
    print('-------- JAIL ----------\n')
    print('While in jail, there are a few ways to get out.')
    print('First, you can use a get out of jail free card.')
    print('Second you can pay $50.')
    print('Finally you can attempt to roll doubles.')
    print('If you do not roll doubles in 3 turns, you must pay $50.')
    print('-'*50)
    print('\n\n')


#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def title(): #Function for displaying the title of the game
    header =      ('+----------------------------------------------------+\n'+
                   '|                                                    |\n'+
                   '|          C O N S O L E    M O N O P O L Y          |\n'+
                   '|                                                    |\n'+
                   '|     Some helpful information will be displayed     |\n'+
                   '|    below. Be sure to read it and if you need to    |\n'+
                   "|    re-open it, please type 'help'. Don't forget    |\n"+
                   '|    to have fun, and good luck! Game begins now.    |\n'+
                   '|                                                    |\n'+
                   '+----------------------------------------------------+')
    for char in header:
        print(char, end='')
        sleep(.02)
    print('\n\n')


#------------------------------------------------
#------------------------------------------------
#------------------------------------------------


def rules():
    answer = 'z'
    website = 'https://www.officialgamerules.org/monopoly'
    print()
    print(f"Type 'yes' if you want to open {website}.")
    print("Or type, 'no' if not.")
    while answer.lower() not in {'yes','no'}:
        answer = input()
        if answer.lower() not in {'yes','no'}:
            print('Try again')
    answer.lower()
    print('\n')
    if answer == 'yes':
        webbrowser.open(website)
    if answer == 'no':
        pass
    print()

if __name__ == "__main__":
    main()
